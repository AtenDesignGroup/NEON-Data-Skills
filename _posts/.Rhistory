#create the markdown file name - add a date at the beginning to Jekyll recognizes
#it as a post
mdFile <- paste0(gitRepoPath,postsDir,add.date ,sub(".Rmd$", "", input), ".md")
#knit Rmd to jekyll flavored md format
knit(input, output = mdFile, envir = parent.frame())
#COPY image director, rmd file OVER to the GIT SITE###
#copy image directory over
file.copy(paste0(wd,"/",fig.path), paste0(gitRepoPath,imagePath), recursive=TRUE)
#copy rmd file to the rmd directory on git
file.copy(paste0(wd,"/",basename(files)), gitRepoPath, recursive=TRUE)
#delete local repo copies of RMD files just so things are cleaned up??
## OUTPUT STUFF TO R ##
#output code in R format
rCodeOutput <- paste0(gitRepoPath, "code/", sub(".Rmd$", "", basename(files)), ".R")
#purl the code to R - place it in the "code" directory
purl(files, output = rCodeOutput)
#clean up
#remove Rmd file from data working directory
unlink(basename(files))
#print when it's done
doneWith <- paste0("processed: ",files)
print(doneWith)
}
#clean up images directory (remove all sub dirs)
unlink(paste0(wd,"/",imagePath,"*"), recursive = TRUE)
########################### end script
##################
# This code takes a set of Rmd files from a designated git repo and
# 1) knits them to jekyll flavored markdown
# 2) purls them to .R files
# it then cleans up all image directories, etc from the working dir!
##################
require(knitr)
#################### Set up Input Variables #############################
#Inputs - Where the git repo is on your computer
gitRepoPath <-"~/Documents/GitHub/NEON-R-Spatial-Vector/"
#jekyll will only render md posts that begin with a date. Add one.
add.date <- "2015-10-26-L"
#set working dir - this is where the data are located
wd <- "~/Documents/data/1_DataPortal_Workshop/1_WorkshopData"
################### CONFIG BELOW IS REQUIRED BY JEKYLL - DON"T CHANGE ############
#set data working dir
setwd(wd)
#all .md files must be in the _posts dir as required by jekyll
#jan 21 - added sub dir to group all lessons together
#please change the directory name ONLY (after _posts/ if needed
postsDir <- ("_posts/R/dc-spatial-vector/")
#images path
imagePath <- "images/rfigs/"
#set the base url for images and links in the md file
base.url="{{ site.baseurl }}/"
opts_knit$set(base.url = base.url)
#################### Set up Image Directory #############################
#make sure image directory exists
#if it doesn't exist, create it
#note this will fail if the sub dir doesn't exist
if (file.exists(paste0(wd,"/","images"))){
print("image dir exists - all good")
} else {
#create image directory structure
dir.create(file.path(wd, "images/"))
dir.create(file.path(wd, "images/rfigs"))
dir.create(file.path(wd, figDir))
print("image directories created!")
}
#NOTE -- delete the image directory at the end!
#################### Get List of RMD files to Render #############################
#get a list of files to knit / purl
rmd.files <- list.files(gitRepoPath, pattern="*.Rmd", full.names = TRUE )
#################### Set up Image Directory #############################
for (files in rmd.files) {
#copy .Rmd file to data working directory
file.copy(from = files, to=wd, overwrite = TRUE)
input=basename(files)
#setup path to images
#print(paste0(imagePath, sub(".Rmd$", "", basename(input)), "/"))
fig.path <- print(paste0(imagePath, sub(".Rmd$", "", input), "/"))
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = " ")
#render_jekyll()
render_markdown(strict = TRUE)
#create the markdown file name - add a date at the beginning to Jekyll recognizes
#it as a post
mdFile <- paste0(gitRepoPath,postsDir,add.date ,sub(".Rmd$", "", input), ".md")
#knit Rmd to jekyll flavored md format
knit(input, output = mdFile, envir = parent.frame())
#COPY image director, rmd file OVER to the GIT SITE###
#copy image directory over
file.copy(paste0(wd,"/",fig.path), paste0(gitRepoPath,imagePath), recursive=TRUE)
#copy rmd file to the rmd directory on git
file.copy(paste0(wd,"/",basename(files)), gitRepoPath, recursive=TRUE)
#delete local repo copies of RMD files just so things are cleaned up??
## OUTPUT STUFF TO R ##
#output code in R format
rCodeOutput <- paste0(gitRepoPath, "code/", sub(".Rmd$", "", basename(files)), ".R")
#purl the code to R - place it in the "code" directory
purl(files, output = rCodeOutput)
#clean up
#remove Rmd file from data working directory
unlink(basename(files))
#print when it's done
doneWith <- paste0("processed: ",files)
print(doneWith)
}
#clean up images directory (remove all sub dirs)
unlink(paste0(wd,"/",imagePath,"*"), recursive = TRUE)
########################### end script
##################
# This code takes a set of Rmd files from a designated git repo and
# 1) knits them to jekyll flavored markdown
# 2) purls them to .R files
# it then cleans up all image directories, etc from the working dir!
##################
require(knitr)
#################### Set up Input Variables #############################
#Inputs - Where the git repo is on your computer
gitRepoPath <-"~/Documents/GitHub/NEON-R-Spatial-Vector/"
#jekyll will only render md posts that begin with a date. Add one.
add.date <- "2015-10-26-L"
#set working dir - this is where the data are located
wd <- "~/Documents/data/1_DataPortal_Workshop/1_WorkshopData"
################### CONFIG BELOW IS REQUIRED BY JEKYLL - DON"T CHANGE ############
#set data working dir
setwd(wd)
#all .md files must be in the _posts dir as required by jekyll
#jan 21 - added sub dir to group all lessons together
#please change the directory name ONLY (after _posts/ if needed
postsDir <- ("_posts/R/dc-spatial-vector/")
#images path
imagePath <- "images/rfigs/"
#set the base url for images and links in the md file
base.url="{{ site.baseurl }}/"
opts_knit$set(base.url = base.url)
#################### Set up Image Directory #############################
#make sure image directory exists
#if it doesn't exist, create it
#note this will fail if the sub dir doesn't exist
if (file.exists(paste0(wd,"/","images"))){
print("image dir exists - all good")
} else {
#create image directory structure
dir.create(file.path(wd, "images/"))
dir.create(file.path(wd, "images/rfigs"))
dir.create(file.path(wd, figDir))
print("image directories created!")
}
#NOTE -- delete the image directory at the end!
#################### Get List of RMD files to Render #############################
#get a list of files to knit / purl
rmd.files <- list.files(gitRepoPath, pattern="*.Rmd", full.names = TRUE )
#################### Set up Image Directory #############################
for (files in rmd.files) {
#copy .Rmd file to data working directory
file.copy(from = files, to=wd, overwrite = TRUE)
input=basename(files)
#setup path to images
#print(paste0(imagePath, sub(".Rmd$", "", basename(input)), "/"))
fig.path <- print(paste0(imagePath, sub(".Rmd$", "", input), "/"))
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = " ")
#render_jekyll()
render_markdown(strict = TRUE)
#create the markdown file name - add a date at the beginning to Jekyll recognizes
#it as a post
mdFile <- paste0(gitRepoPath,postsDir,add.date ,sub(".Rmd$", "", input), ".md")
#knit Rmd to jekyll flavored md format
knit(input, output = mdFile, envir = parent.frame())
#COPY image director, rmd file OVER to the GIT SITE###
#copy image directory over
file.copy(paste0(wd,"/",fig.path), paste0(gitRepoPath,imagePath), recursive=TRUE)
#copy rmd file to the rmd directory on git
file.copy(paste0(wd,"/",basename(files)), gitRepoPath, recursive=TRUE)
#delete local repo copies of RMD files just so things are cleaned up??
## OUTPUT STUFF TO R ##
#output code in R format
rCodeOutput <- paste0(gitRepoPath, "code/", sub(".Rmd$", "", basename(files)), ".R")
#purl the code to R - place it in the "code" directory
purl(files, output = rCodeOutput)
#clean up
#remove Rmd file from data working directory
unlink(basename(files))
#print when it's done
doneWith <- paste0("processed: ",files)
print(doneWith)
}
#clean up images directory (remove all sub dirs)
unlink(paste0(wd,"/",imagePath,"*"), recursive = TRUE)
########################### end script
library(yaml)
library(readr)
library(yaml)
library(dplyr)
options(stringsAsFactors = FALSE)
setwd("~/Documents/GitHub/NEON-Data-Skills/_posts")
all.md.files <- list.files(pattern = ".md", recursive = TRUE)
all.md.files
final.df <- as.data.frame(matrix(0, ncol = 2, nrow = 0))
for (file in all.md.files) {
a <- read_lines(file, 20)
#find the line that contains "packagesLibraries"
b <- a[grep("packagesLibraries", a) ]
#if the element is empty, move on to the next
if (is.na(b[1])) {
print("no libraries, moving on")
} else {
#replace a few things
c <- gsub(pattern = "packagesLibraries:", x=b, replacement = "" )
c <- gsub(pattern = "\\]",x=c, replacement = "" )
c <- gsub(pattern = "\\[", x=c, replacement = "" )
#remove any extra spaces
c <- gsub(pattern = " ", x=c, replacement = "" )
#next parse out the various libraries
d <- data.frame(unlist(strsplit(c,',')))
names(d) <- "slug"
d$name <- d$slug
if (nrow(final.df)==0) {
final.df <- d
} else {
final.df <- rbind(d, final.df)
}
print(d)
print(final.df)
}
print(file)
print(b)
}
final.df
final.df.unique <- unique(final.df)
final.df.unique <- arrange(final.df.unique, slug)
finalYAML <- yaml::as.yaml(final.df.unique, column.major = FALSE)
finalYAML
cat(finalYAML, "\n")
fileConn<-file("packagesLibraries.yml")
writeLines(finalYAML, fileConn)
close(fileConn)
paste0(wd,"/",basename(files))
paste0(basePath,"/_posts")
basePath <-"~/Documents/GitHub/NEON-R-Spatial-Vector/"
#this is where you want to move files to
prodPath <-"~/Documents/GitHub/deleteMe/"
file.copy(paste0(basePath,"/_posts"), prodPath, recursive=TRUE)
file.copy(paste0(basePath,"/_posts"), prodPath, recursive=TRUE)
file.copy(paste0(basePath,"/_posts"), prodPath, recursive=TRUE)
file.copy(paste0(basePath,"/_posts"), prodPath, recursive=TRUE)
file.copy(paste0(basePath,"/_posts"), prodPath, recursive=TRUE)
file.copy(paste0(basePath,"/code"), prodPath, recursive=TRUE)
rmd.files <- list.files(basePath, pattern="*.Rmd", full.names = TRUE )
rmd.files
sapply(file.copy(rmd.files, paste0(prodPath,"/_posts")))
file.copy(rmd.files, paste0(prodPath,"/_posts"))
list.dirs('.', recursive=FALSE)
list.dirs(paste0(basePath,"/_posts/"), recursive=FALSE)
list.dirs(paste0(basePath,"/_posts/"), recursive=FALSE)
list.dirs(paste0(basePath,"_posts/"), recursive=FALSE)
list.dirs(paste0(basePath,"_posts/"), recursive=TRUE)
list.dirs(paste0(basePath,"_posts"), recursive=TRUE)
postSubDir <- list.dirs(paste0(basePath,"_posts"), recursive=TRUE)
postSubDir <- list.dirs(paste0(basePath,"_posts"), recursive=TRUE,full.names = FALSE)
postSubDir
postSubDir <- list.dirs(paste0(basePath,"_posts"), recursive=TRUE,full.names = TRUE)
postSubDir
length(postSubDir)
length(postSubDir)
postSubDir[length(postSubDir)]
p
p
#NOTE: this assums there is only one
postSubDir <- list.dirs(paste0(basePath,"_posts"), recursive=TRUE,full.names = FALSE)
#grab the last dir in the repo - again this assumes only one
length(postSubDir)
postSubDir[length(postSubDir)]
file.copy(rmd.files, paste0(prodPath,"/_posts",subDirPath))
subDirPath <- postSubDir[length(postSubDir)]
file.copy(rmd.files, paste0(prodPath,"/_posts",subDirPath))
paste0(prodPath,"/_posts",subDirPath)
file.copy(rmd.files, paste0(prodPath,"_posts",subDirPath))
file.copy(rmd.files, paste0(prodPath,"_posts/",subDirPath))
###This code is tailored to moving posts from the data-lessons repos to the
##dev or prod server.
#Inputs - Where the base files are on your computer
basePath <-"~/Documents/GitHub/NEON-R-Spatial-Vector/"
#get subdir in _posts
#NOTE: this assums there is only one
postSubDir <- list.dirs(paste0(basePath,"_posts"), recursive=TRUE,full.names = FALSE)
#grab the last dir in the repo - again this assumes only one
length(postSubDir)
subDirPath <- postSubDir[length(postSubDir)]
#this is where you want to move files to
#prodPath <-"~/Documents/GitHub/NEON-R-Spatial-Vector/"
prodPath <-"~/Documents/GitHub/deleteMe/"
#copy _posts file to the rmd directory on git
file.copy(paste0(basePath,"/_posts"), prodPath, recursive=TRUE)
#copy code over
file.copy(paste0(basePath,"/code"), prodPath, recursive=TRUE)
#grab just the rmd files and copy those over
rmd.files <- list.files(basePath, pattern="*.Rmd", full.names = TRUE )
file.copy(rmd.files, paste0(prodPath,"_posts/",subDirPath))
###This code is tailored to moving all template items from one repo to another
## use this with CAUTION!! It's designed mostly to update existing data lessons repos
##note - this won't clean up the directory - rather it just copies files over
## so there's a chance of duplicate files
# 1. it moves all RMD files to _posts/ whatever the sub dir is in the repo
# 2. it moves all code files to the code dir
# 3. it moves all md files from the data-lessons posts dir to the same location in the prod repo
#Inputs - Where the base template files are located on your computer
basePath <-"~/Documents/GitHub/NEON-Data-Skills-Development/"
#this is where you want to move files to
#updatePath <-"~/Documents/GitHub/NEON-R-Spatial-Vector/"
#updatePath <-"~/Documents/GitHub/NEON-R-Spatial-Raster/"
#updatePath <-"~/Documents/GitHub/NEON-R-Tabular-Time-Series/"
updatePath <-"~/Documents/GitHub/deleteMe/"
#copy org dir over - this contains the md home page files for categories, tags, etc
file.copy(paste0(basePath,"/org"), updatePath, recursive=TRUE)
#copy data dir - this contains the YAML lists
file.copy(paste0(basePath,"/_data"), updatePath, recursive=TRUE)
#copy data dir - this contains the YAML lists
file.copy(paste0(basePath,"/assets"), updatePath, recursive=TRUE)
#copy data dir - this contains the YAML lists
file.copy(paste0(basePath,"/_layouts"), updatePath, recursive=TRUE)
#copy data dir - this contains the YAML lists
file.copy(paste0(basePath,"/_includes"), updatePath, recursive=TRUE)
file.copy(paste0(basePath,"/images/rfigs"), prodPath, recursive=TRUE)
###This code is tailored to moving all template items from one repo to another
## use this with CAUTION!! It's designed mostly to update existing data lessons repos
##note - this won't clean up the directory - rather it just copies files over
## so there's a chance of duplicate files
# 1. it moves all RMD files to _posts/ whatever the sub dir is in the repo
# 2. it moves all code files to the code dir
# 3. it moves all md files from the data-lessons posts dir to the same location in the prod repo
#Inputs - Where the base template files are located on your computer
baseTemplatePath <-"~/Documents/GitHub/NEON-Data-Skills-Development/"
#this is where you want to move files to
#updatePath <-"~/Documents/GitHub/NEON-R-Spatial-Vector/"
#updatePath <-"~/Documents/GitHub/NEON-R-Spatial-Raster/"
#updatePath <-"~/Documents/GitHub/NEON-R-Tabular-Time-Series/"
updatePath <-"~/Documents/GitHub/deleteMe/"
#copy org dir over - this contains the md home page files for categories, tags, etc
file.copy(paste0(baseTemplatePath,"/org"), updatePath, recursive=TRUE)
#copy data dir - this contains the YAML lists
file.copy(paste0(baseTemplatePath,"/_data"), updatePath, recursive=TRUE)
#copy data dir - this contains the YAML lists
file.copy(paste0(baseTemplatePath,"/assets"), updatePath, recursive=TRUE)
#copy data dir - this contains the YAML lists
file.copy(paste0(baseTemplatePath,"/_layouts"), updatePath, recursive=TRUE)
#copy data dir - this contains the YAML lists
file.copy(paste0(baseTemplatePath,"/_includes"), updatePath, recursive=TRUE)
###This code is tailored to moving posts from the data-lessons repos to the
##dev or prod server. it does the following
# 1. it moves all RMD files to _posts/ whatever the sub dir is in the repo
# 2. it moves all code files to the code dir
# 3. it moves all md files from the data-lessons posts dir to the same location in the prod repo
#Inputs - Where the base files are on your computer
basePath <-"~/Documents/GitHub/NEON-R-Spatial-Vector/"
basePath <-"~/Documents/GitHub/NEON-R-Spatial-Raster/"
basePath <-"~/Documents/GitHub/NEON-R-Tabular-Time-Series/"
#this is where you want to move files to
#prodPath <-"~/Documents/GitHub/NEON-R-Spatial-Vector/"
prodPath <-"~/Documents/GitHub/deleteMe/"
#get subdir in _posts
#NOTE: this assums there is only one
postSubDir <- list.dirs(paste0(basePath,"_posts"), recursive=TRUE,full.names = FALSE)
#grab the last dir in the repo - again this assumes only one
length(postSubDir)
subDirPath <- postSubDir[length(postSubDir)]
#copy _posts file to the rmd directory on git
file.copy(paste0(basePath,"/_posts"), prodPath, recursive=TRUE)
#copy knitr images dir sam dir  on prod
file.copy(paste0(basePath,"/images/rfigs"), prodPath, recursive=TRUE)
#copy code over
file.copy(paste0(basePath,"/code"), prodPath, recursive=TRUE)
#grab just the rmd files and copy those over
rmd.files <- list.files(basePath, pattern="*.Rmd", full.names = TRUE )
file.copy(rmd.files, paste0(prodPath,"_posts/",subDirPath))
###This code is tailored to moving posts from the data-lessons repos to the
##dev or prod server. it does the following
# 1. it moves all RMD files to _posts/ whatever the sub dir is in the repo
# 2. it moves all code files to the code dir
# 3. it moves all md files from the data-lessons posts dir to the same location in the prod repo
#Inputs - Where the base files are on your computer
basePath <-"~/Documents/GitHub/NEON-R-Spatial-Vector/"
basePath <-"~/Documents/GitHub/NEON-R-Spatial-Raster/"
basePath <-"~/Documents/GitHub/NEON-R-Tabular-Time-Series/"
#this is where you want to move files to
#prodPath <-"~/Documents/GitHub/NEON-R-Spatial-Vector/"
prodPath <-"~/Documents/GitHub/deleteMe/"
#get subdir in _posts
#NOTE: this assums there is only one
postSubDir <- list.dirs(paste0(basePath,"_posts"), recursive=TRUE,full.names = FALSE)
#grab the last dir in the repo - again this assumes only one
length(postSubDir)
subDirPath <- postSubDir[length(postSubDir)]
#copy _posts file to the rmd directory on git
file.copy(paste0(basePath,"/_posts"), prodPath, recursive=TRUE)
#copy knitr images dir sam dir  on prod
file.copy(paste0(basePath,"/images/rfigs"), prodPath, recursive=TRUE)
#copy code over
file.copy(paste0(basePath,"/code"), prodPath, recursive=TRUE)
#grab just the rmd files and copy those over
rmd.files <- list.files(basePath, pattern="*.Rmd", full.names = TRUE )
file.copy(rmd.files, paste0(prodPath,"_posts/",subDirPath))
file.copy(paste0(basePath,"/images"), prodPath, recursive=TRUE)
###This code is tailored to moving posts from the data-lessons repos to the
##dev or prod server. it does the following
# 1. it moves all RMD files to _posts/ whatever the sub dir is in the repo
# 2. it moves all code files to the code dir
# 3. it moves all md files from the data-lessons posts dir to the same location in the prod repo
#Inputs - Where the base files are on your computer
basePath <-"~/Documents/GitHub/NEON-R-Spatial-Vector/"
basePath <-"~/Documents/GitHub/NEON-R-Spatial-Raster/"
basePath <-"~/Documents/GitHub/NEON-R-Tabular-Time-Series/"
#this is where you want to move files to
#prodPath <-"~/Documents/GitHub/NEON-R-Spatial-Vector/"
prodPath <-"~/Documents/GitHub/deleteMe/"
#get subdir in _posts
#NOTE: this assums there is only one
postSubDir <- list.dirs(paste0(basePath,"_posts"), recursive=TRUE,full.names = FALSE)
#grab the last dir in the repo - again this assumes only one
length(postSubDir)
subDirPath <- postSubDir[length(postSubDir)]
#copy _posts file to the rmd directory on git
file.copy(paste0(basePath,"/_posts"), prodPath, recursive=TRUE)
#copy knitr images dir sam dir  on prod
file.copy(paste0(basePath,"/images"), prodPath, recursive=TRUE)
#copy code over
file.copy(paste0(basePath,"/code"), prodPath, recursive=TRUE)
#grab just the rmd files and copy those over
rmd.files <- list.files(basePath, pattern="*.Rmd", full.names = TRUE )
file.copy(rmd.files, paste0(prodPath,"_posts/",subDirPath))
prodPath
###This code is tailored to moving posts from the data-lessons repos to the
##dev or prod server. it does the following
# 1. it moves all RMD files to _posts/ whatever the sub dir is in the repo
# 2. it moves all code files to the code dir
# 3. it moves all md files from the data-lessons posts dir to the same location in the prod repo
#Inputs - Where the base files are on your computer
basePath <-"~/Documents/GitHub/NEON-R-Spatial-Vector/"
#basePath <-"~/Documents/GitHub/NEON-R-Spatial-Raster/"
#basePath <-"~/Documents/GitHub/NEON-R-Tabular-Time-Series/"
#this is where you want to move files to
#prodPath <-"~/Documents/GitHub/NEON-R-Spatial-Vector/"
prodPath <-"~/Documents/GitHub/deleteMe/"
#get subdir in _posts
#NOTE: this assums there is only one
postSubDir <- list.dirs(paste0(basePath,"_posts"), recursive=TRUE,full.names = FALSE)
#grab the last dir in the repo - again this assumes only one
length(postSubDir)
subDirPath <- postSubDir[length(postSubDir)]
#copy _posts file to the rmd directory on git
file.copy(paste0(basePath,"/_posts"), prodPath, recursive=TRUE)
#copy knitr images dir sam dir  on prod
file.copy(paste0(basePath,"/images"), prodPath, recursive=TRUE)
#copy code over
file.copy(paste0(basePath,"/code"), prodPath, recursive=TRUE)
#grab just the rmd files and copy those over
rmd.files <- list.files(basePath, pattern="*.Rmd", full.names = TRUE )
file.copy(rmd.files, paste0(prodPath,"_posts/",subDirPath))
###This code is tailored to moving posts from the data-lessons repos to the
##dev or prod server. it does the following
# 1. it moves all RMD files to _posts/ whatever the sub dir is in the repo
# 2. it moves all code files to the code dir
# 3. it moves all md files from the data-lessons posts dir to the same location in the prod repo
#Inputs - Where the base files are on your computer
basePath <-"~/Documents/GitHub/NEON-R-Spatial-Vector/"
#basePath <-"~/Documents/GitHub/NEON-R-Spatial-Raster/"
#basePath <-"~/Documents/GitHub/NEON-R-Tabular-Time-Series/"
#this is where you want to move files to
#prodPath <-"~/Documents/GitHub/NEON-R-Spatial-Vector/"
prodPath <-"~/Documents/GitHub/deleteMe/"
#get subdir in _posts
#NOTE: this assums there is only one
postSubDir <- list.dirs(paste0(basePath,"_posts"), recursive=TRUE,full.names = FALSE)
#grab the last dir in the repo - again this assumes only one
length(postSubDir)
subDirPath <- postSubDir[length(postSubDir)]
#copy _posts file to the rmd directory on git
file.copy(paste0(basePath,"/_posts"), prodPath, recursive=TRUE)
#copy knitr images dir sam dir  on prod
file.copy(paste0(basePath,"/images"), prodPath, recursive=TRUE)
#copy code over
file.copy(paste0(basePath,"/code"), prodPath, recursive=TRUE)
#grab just the rmd files and copy those over
rmd.files <- list.files(basePath, pattern="*.Rmd", full.names = TRUE )
file.copy(rmd.files, paste0(prodPath,"_posts/",subDirPath))
###This code is tailored to moving posts from the data-lessons repos to the
##dev or prod server. it does the following
# 1. it moves all RMD files to _posts/ whatever the sub dir is in the repo
# 2. it moves all code files to the code dir
# 3. it moves all md files from the data-lessons posts dir to the same location in the prod repo
#Inputs - Where the base files are on your computer
#basePath <-"~/Documents/GitHub/NEON-R-Spatial-Vector/"
basePath <-"~/Documents/GitHub/NEON-R-Spatial-Raster/"
#basePath <-"~/Documents/GitHub/NEON-R-Tabular-Time-Series/"
#this is where you want to move files to
#prodPath <-"~/Documents/GitHub/NEON-R-Spatial-Vector/"
prodPath <-"~/Documents/GitHub/deleteMe/"
#get subdir in _posts
#NOTE: this assums there is only one
postSubDir <- list.dirs(paste0(basePath,"_posts"), recursive=TRUE,full.names = FALSE)
#grab the last dir in the repo - again this assumes only one
length(postSubDir)
subDirPath <- postSubDir[length(postSubDir)]
########################## COPY Code files, md and images to prod #############
#copy _posts file to the rmd directory on git
file.copy(paste0(basePath,"/_posts"), prodPath, recursive=TRUE)
#copy knitr images dir sam dir  on prod
file.copy(paste0(basePath,"/images"), prodPath, recursive=TRUE)
#copy code over
file.copy(paste0(basePath,"/code"), prodPath, recursive=TRUE)
#grab just the rmd files and copy those over
rmd.files <- list.files(basePath, pattern="*.Rmd", full.names = TRUE )
file.copy(rmd.files, paste0(prodPath,"_posts/",subDirPath))
imagePath
